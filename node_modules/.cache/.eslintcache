[{"C:\\Users\\kamta\\Desktop\\News project\\src\\index.js":"1","C:\\Users\\kamta\\Desktop\\News project\\src\\App.js":"2","C:\\Users\\kamta\\Desktop\\News project\\src\\Components\\News.js":"3","C:\\Users\\kamta\\Desktop\\News project\\src\\Components\\Navbar.js":"4","C:\\Users\\kamta\\Desktop\\News project\\src\\Components\\NewsItem.js":"5"},{"size":256,"mtime":1664332115359,"results":"6","hashOfConfig":"7"},{"size":1403,"mtime":1663967436026,"results":"8","hashOfConfig":"7"},{"size":2646,"mtime":1664403465943,"results":"9","hashOfConfig":"7"},{"size":1643,"mtime":1664372399671,"results":"10","hashOfConfig":"7"},{"size":1087,"mtime":1663966846839,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lst24k",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kamta\\Desktop\\News project\\src\\index.js",[],[],"C:\\Users\\kamta\\Desktop\\News project\\src\\App.js",[],[],"C:\\Users\\kamta\\Desktop\\News project\\src\\Components\\News.js",["28","29"],[],"import React, { useEffect, useState } from 'react'\r\nimport NewsItem from './NewsItem';\r\nimport PropTypes from 'prop-types';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n\r\n\r\n\r\nconst News = (props) => {\r\n  const [articles, setArticles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setpage] = useState(1);\r\n  const [totalResults, setTotalResults] = useState(0);\r\n\r\n\r\n\r\n  const updateNews = async () => {\r\n    props.setProgress(10);\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=9912f2f63e8246fd9ce5dfeedb719192&page=${page}&pageSize=${props.pageSize}`;\r\n    setLoading(true)\r\n    let data = await fetch(url);\r\n    props.setProgress(30);\r\n    let parsedData = await data.json();\r\n    props.setProgress(70);\r\n    setArticles(parsedData.articles)\r\n    setTotalResults(parsedData.totalResults)\r\n    setLoading(false)\r\n\r\n    props.setProgress(100);\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateNews();\r\n\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n  const fetchMoreData = async () => {\r\n    setpage(page + 1)\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=9912f2f63e8246fd9ce5dfeedb719192&page=${page + 1}&pageSize=${props.pageSize}`;\r\n    setpage(page + 1)\r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    setArticles(articles.concat(parsedData.articles))\r\n    setTotalResults(parsedData.totalResults)\r\n  }\r\n  return (\r\n\r\n    <div className='container my-2'>\r\n      <h2 className='text-center' style={{ margin: \"35px 0px\", marginTop: \"90px\" }}>Top-Headlines</h2>\r\n\r\n\r\n      <InfiniteScroll\r\n\r\n        dataLength={articles.length}\r\n        next={fetchMoreData}\r\n        hasMore={articles.length !== totalResults}\r\n        loader={<h4>Loading...</h4>}\r\n\r\n      >\r\n        <div className='container'>\r\n\r\n          <div className='row'>\r\n            {articles.map((element) => {\r\n              return <div className='col-md-4' key={element.url}>\r\n                <NewsItem title={element.title ? element.title : \"\"} description={element.description ? element.description : \"\"} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source.name} />\r\n\r\n              </div>\r\n\r\n            })}\r\n\r\n          </div>\r\n        </div>\r\n      </InfiniteScroll>\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nNews.defaultProps = {\r\n  country: \"in\",\r\n  pageSize: 5,\r\n  category: \"general\"\r\n}\r\nNews.propTypes = {\r\n  country: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n  category: PropTypes.string,\r\n}\r\nexport default News;\r\n","C:\\Users\\kamta\\Desktop\\News project\\src\\Components\\Navbar.js",[],[],"C:\\Users\\kamta\\Desktop\\News project\\src\\Components\\NewsItem.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":11,"column":10,"nodeType":"32","messageId":"33","endLine":11,"endColumn":17},{"ruleId":"34","severity":1,"message":"35","line":35,"column":6,"nodeType":"36","endLine":35,"endColumn":8,"suggestions":"37"},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateNews'. Either include it or remove the dependency array.","ArrayExpression",["38"],{"desc":"39","fix":"40"},"Update the dependencies array to be: [updateNews]",{"range":"41","text":"42"},[1021,1023],"[updateNews]"]